//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Framework.Api.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Framework.Api.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User already in role &quot;{0}&quot;..
        /// </summary>
        internal static string auth_already_in_role {
            get {
                return ResourceManager.GetString("auth:already_in_role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email &quot;{0}&quot; is already taken..
        /// </summary>
        internal static string auth_duplicate_email {
            get {
                return ResourceManager.GetString("auth:duplicate_email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role name &quot;{0}&quot; is already exist..
        /// </summary>
        internal static string auth_duplicate_role_name {
            get {
                return ResourceManager.GetString("auth:duplicate_role_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username &quot;{0}&quot; is already taken..
        /// </summary>
        internal static string auth_duplicate_username {
            get {
                return ResourceManager.GetString("auth:duplicate_username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This email already confirmed..
        /// </summary>
        internal static string auth_email_already_confirmed {
            get {
                return ResourceManager.GetString("auth:email_already_confirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email is already linked to this account..
        /// </summary>
        internal static string auth_email_already_linked {
            get {
                return ResourceManager.GetString("auth:email_already_linked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token has expired..
        /// </summary>
        internal static string auth_expired_token {
            get {
                return ResourceManager.GetString("auth:expired_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email &quot;{0}&quot; is invalid..
        /// </summary>
        internal static string auth_invalid_email {
            get {
                return ResourceManager.GetString("auth:invalid_email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid login identifier. To login, you must use your phone number, national ID, or your email address..
        /// </summary>
        internal static string auth_invalid_login_identifier {
            get {
                return ResourceManager.GetString("auth:invalid_login_identifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid login token..
        /// </summary>
        internal static string auth_invalid_login_token {
            get {
                return ResourceManager.GetString("auth:invalid_login_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Role name &quot;{0}&quot; is invalid..
        /// </summary>
        internal static string auth_invalid_role {
            get {
                return ResourceManager.GetString("auth:invalid_role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token..
        /// </summary>
        internal static string auth_invalid_token {
            get {
                return ResourceManager.GetString("auth:invalid_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UserName &quot;{0}&quot; is invalid, can only contain letters or digits..
        /// </summary>
        internal static string auth_invalid_username {
            get {
                return ResourceManager.GetString("auth:invalid_username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lockout is not enabled for this user..
        /// </summary>
        internal static string auth_lockout_not_enabled {
            get {
                return ResourceManager.GetString("auth:lockout_not_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user with this login already exists. External logins can only be associated with one account..
        /// </summary>
        internal static string auth_login_already_linked {
            get {
                return ResourceManager.GetString("auth:login_already_linked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to sign in. Invalid email or password..
        /// </summary>
        internal static string auth_login_failed {
            get {
                return ResourceManager.GetString("auth:login_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login account not associated with any user..
        /// </summary>
        internal static string auth_login_not_found {
            get {
                return ResourceManager.GetString("auth:login_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User cannot sign in without a confirmed account..
        /// </summary>
        internal static string auth_login_requires_confirmation {
            get {
                return ResourceManager.GetString("auth:login_requires_confirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign in requires two factor authentication..
        /// </summary>
        internal static string auth_login_requires_two_factor {
            get {
                return ResourceManager.GetString("auth:login_requires_two_factor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to the authentication provider..
        /// </summary>
        internal static string auth_login_token_validation_failed {
            get {
                return ResourceManager.GetString("auth:login_token_validation_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User is not in role &quot;{0}&quot;..
        /// </summary>
        internal static string auth_not_in_role {
            get {
                return ResourceManager.GetString("auth:not_in_role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect password..
        /// </summary>
        internal static string auth_password_mismatch {
            get {
                return ResourceManager.GetString("auth:password_mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must have at least one digit [&apos;0&apos;_&apos;9&apos;]..
        /// </summary>
        internal static string auth_password_requires_digit {
            get {
                return ResourceManager.GetString("auth:password_requires_digit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must have at least one lowercase [&apos;a&apos;_&apos;z&apos;]..
        /// </summary>
        internal static string auth_password_requires_lower {
            get {
                return ResourceManager.GetString("auth:password_requires_lower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must have at least one non alphanumeric character..
        /// </summary>
        internal static string auth_password_requires_non_alphanumeric {
            get {
                return ResourceManager.GetString("auth:password_requires_non_alphanumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must use at least {0} different characters..
        /// </summary>
        internal static string auth_password_requires_unique_chars {
            get {
                return ResourceManager.GetString("auth:password_requires_unique_chars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must have at least one uppercase [&apos;A&apos;_&apos;Z&apos;]..
        /// </summary>
        internal static string auth_password_requires_upper {
            get {
                return ResourceManager.GetString("auth:password_requires_upper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must be at least {0} characters..
        /// </summary>
        internal static string auth_password_too_short {
            get {
                return ResourceManager.GetString("auth:password_too_short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recovery code redemption failed..
        /// </summary>
        internal static string auth_recovery_code_redemption_failed {
            get {
                return ResourceManager.GetString("auth:recovery_code_redemption_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to remove the password, the account must have an alternative to login..
        /// </summary>
        internal static string auth_remove_password_requires_alternate_login {
            get {
                return ResourceManager.GetString("auth:remove_password_requires_alternate_login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User already has a password set..
        /// </summary>
        internal static string auth_user_already_has_password {
            get {
                return ResourceManager.GetString("auth:user_already_has_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You tried many times. The account temporarily suspended. Try again later..
        /// </summary>
        internal static string auth_user_locked_out {
            get {
                return ResourceManager.GetString("auth:user_locked_out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not remove this external login. There is no other registration method please set a password first..
        /// </summary>
        internal static string auth_user_requires_alternate_login_or_password {
            get {
                return ResourceManager.GetString("auth:user_requires_alternate_login_or_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optimistic concurrency failure, object has been modified. Can not perform two operations at the same time..
        /// </summary>
        internal static string g_concurrency_failure {
            get {
                return ResourceManager.GetString("g:concurrency_failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated request detected..
        /// </summary>
        internal static string g_duplicated_request {
            get {
                return ResourceManager.GetString("g:duplicated_request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature currently unavailable..
        /// </summary>
        internal static string g_feature_currently_unavailable {
            get {
                return ResourceManager.GetString("g:feature_currently_unavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recaptcha host, and request host do not match..
        /// </summary>
        internal static string g_invalid_recaptcha {
            get {
                return ResourceManager.GetString("g:invalid_recaptcha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are not authenticated to execute request..
        /// </summary>
        internal static string g_not_authorized {
            get {
                return ResourceManager.GetString("g:not_authorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obsolete API. This request is not available for this account..
        /// </summary>
        internal static string g_obsolete_api {
            get {
                return ResourceManager.GetString("g:obsolete_api", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown failure  has occurred..
        /// </summary>
        internal static string g_unknown_error {
            get {
                return ResourceManager.GetString("g:unknown_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong. Try to log in again..
        /// </summary>
        internal static string g_user_not_founded {
            get {
                return ResourceManager.GetString("g:user_not_founded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User already blocked..
        /// </summary>
        internal static string user_already_blocked {
            get {
                return ResourceManager.GetString("user:already_blocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User already unblocked..
        /// </summary>
        internal static string user_already_unblocked {
            get {
                return ResourceManager.GetString("user:already_unblocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User is not locked out..
        /// </summary>
        internal static string user_already_unlocked {
            get {
                return ResourceManager.GetString("user:already_unlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated national ID..
        /// </summary>
        internal static string user_duplicated_national_id {
            get {
                return ResourceManager.GetString("user:duplicated_national_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated phone number..
        /// </summary>
        internal static string user_duplicated_phone_number {
            get {
                return ResourceManager.GetString("user:duplicated_phone_number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email {0} is already linked to another user..
        /// </summary>
        internal static string user_email_already_linked_to_other_user {
            get {
                return ResourceManager.GetString("user:email_already_linked_to_other_user", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone number {0} is already linked to another user..
        /// </summary>
        internal static string user_phone_number_already_linked_to_other_user {
            get {
                return ResourceManager.GetString("user:phone_number_already_linked_to_other_user", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have exceeded the maximum number of attempts to request forget password. Please try again after {0}..
        /// </summary>
        internal static string user_request_forget_password_attempts_exceeded {
            get {
                return ResourceManager.GetString("user:request_forget_password_attempts_exceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only request forget password once every {0}. Please wait {1} before trying again..
        /// </summary>
        internal static string user_request_forget_password_cooldown {
            get {
                return ResourceManager.GetString("user:request_forget_password_cooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have exceeded the maximum number of attempts `{0}` to verify your email address. Please try again after {1}..
        /// </summary>
        internal static string user_request_verify_email_attempts_exceeded {
            get {
                return ResourceManager.GetString("user:request_verify_email_attempts_exceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only request to verify your email address once every {0}. Please wait {1} before trying again..
        /// </summary>
        internal static string user_request_verify_email_cooldown {
            get {
                return ResourceManager.GetString("user:request_verify_email_cooldown", resourceCulture);
            }
        }
    }
}
